import type { Metadata } from "next";

import { Montserrat } from "next/font/google";
import "./globals.css";
import ProductLayout from "@/layout/ProductLayout";
import ReactQueryProvider from "@/provider/ReactQueryProvider";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

const montserrat = Montserrat({
  subsets: ["latin"],
  variable: "--font-montserrat",
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

type Props = {
  children: React.ReactNode;
  params: { lang: string };
};
export async function generateStaticParams() {
  return [{ lang: "en" }, { lang: "ms" }];
}

export default function RootLayout({ children, params: { lang } }: Props) {
  return (
    <html lang={lang}>
      <body className={`${montserrat.variable} font-sans antialiased`}>
        <ReactQueryProvider>
          <ProductLayout>{children}</ProductLayout>
        </ReactQueryProvider>
      </body>
    </html>
  );
}
